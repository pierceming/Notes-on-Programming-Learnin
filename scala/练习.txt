 //创建一个List
    val lst0 = List(1,7,9,8,0,3,5,4,6,2)
    //将lst0中每个元素乘以10后生成一个新的集合
 
    //将lst0中的偶数取出来生成一个新的集合

    //将lst0排序后生成一个新的集合

    //反转顺序

    //将lst0中的元素4个一组,类型为Iterator[List[Int]]

    //将Iterator转换成List

    //将多个list压扁成一个List

	val lines = List("hello tom hello jerry", "hello jerry", "hello kitty")
    //先按空格切分，在压平



    //并行计算求和
 
    //化简：reduce
    //将非特定顺序的二元操作应用到所有元素

    //安装特点的顺序


    //折叠：有初始值（无特定顺序）

    //折叠：有初始值（有特定顺序）



    //聚合
    val arr = List(List(1, 2, 3), List(3, 4, 5), List(2), List(0))


    val l1 = List(5,6,4,7)
    val l2 = List(1,2,3,4)
    //求并集

    //求交集

    //求差集

    println(r3)

	
	
val lines = List("hello tom hello jerry", "hello jerry", "hello kitty")
lines.flatMap(_.split(" ")).map((_, 1)).groupBy(_._1).mapValues(_.foldLeft(0)(_+_._2))
lines.flatMap(_.split(" ")).map((_, 1)).groupBy(_._1).map(t=>(t._1, t._2.size)).toList.sortBy(_._2).reverse